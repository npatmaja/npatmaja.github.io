<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on nauval atmaja</title>
    <link>http://nauvalatmaja.com/categories/development/</link>
    <description>Recent content in Development on nauval atmaja</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Dec 2017 15:18:16 +0700</lastBuildDate>
    
	<atom:link href="http://nauvalatmaja.com/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Self Contained Go Development Environment</title>
      <link>http://nauvalatmaja.com/2017/12/31/a-self-contained-go-development-environment/</link>
      <pubDate>Sun, 31 Dec 2017 15:18:16 +0700</pubDate>
      
      <guid>http://nauvalatmaja.com/2017/12/31/a-self-contained-go-development-environment/</guid>
      <description>Go(lang) is getting momentum in Indonesia during the recent years as big names are migrating to Go. Tokopedia, Go-Jek, I&amp;rsquo;m looking at you both. Not to mention many other startups build their tech-stack using Go from the get-go due to the hype.
Go is an interesting programming language, not to mention it has fun part in it. It combines the ease of dynamically typed language and the efficiency of statically typed language with support for networked and multicore computing (Go FAQ page, 2017).</description>
    </item>
    
    <item>
      <title>Going Vim</title>
      <link>http://nauvalatmaja.com/2017/05/28/going-vim/</link>
      <pubDate>Sun, 28 May 2017 09:18:16 +0700</pubDate>
      
      <guid>http://nauvalatmaja.com/2017/05/28/going-vim/</guid>
      <description>Vim or &amp;ldquo;Vi Improved&amp;rdquo; is a text editor that works in every terminal. Some people even consider Vim as the best text editor for programming. However, many people are also intimidated with its steep learning curve. Vim is a terminal-based text editor which means everything are operated through keyboard keys, there is no need to use the trackpad or mouse. This is actually what makes Vim powerful. One does not need to take their fingers off of the keyboard when writing in Vim.</description>
    </item>
    
    <item>
      <title>Function Composition in Go</title>
      <link>http://nauvalatmaja.com/2016/04/15/function-composition-in-go/</link>
      <pubDate>Fri, 15 Apr 2016 07:40:17 +0700</pubDate>
      
      <guid>http://nauvalatmaja.com/2016/04/15/function-composition-in-go/</guid>
      <description>I&amp;rsquo;ve been playing with functional JavaScript for a while, especially partial applications and function composition, and I find those concepts are very helpful in my daily coding practices. At first, if you are short in mathematical logic systems (just like me), making sense anything functional could be a bit out of hand. Fortunately there are a lot of reading materials that do a great job explaining the concepts in an easy and pragmatic way.</description>
    </item>
    
    <item>
      <title>Upload Files with Backbone.js, Node.js and express 4.x</title>
      <link>http://nauvalatmaja.com/2015/01/30/upload-files-with-backbone.js-node.js-and-express-4.x/</link>
      <pubDate>Fri, 30 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://nauvalatmaja.com/2015/01/30/upload-files-with-backbone.js-node.js-and-express-4.x/</guid>
      <description>Backbone fundamentals is a great free resource to learn Backbone.js from scratch. The book was written by Addy Osmany under creative-commons license. As its second exercise, the book guide the readers to create a simple library application that uses Node.js as the back-end. However, it left the part to upload book&amp;rsquo;s cover to the readers as an exercise. Hence, here is the way I did it.
Requirement There are two additional requirements for the upload book&amp;rsquo;s cover features: - The selected cover should be previewed as thumbnail</description>
    </item>
    
    <item>
      <title>Android Development with Genymotion</title>
      <link>http://nauvalatmaja.com/2015/01/08/android-development-with-genymotion/</link>
      <pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://nauvalatmaja.com/2015/01/08/android-development-with-genymotion/</guid>
      <description>I am a noob in android development and one thing I am not comfortable with is the stock android device emulator. The default emulator is really slow, the boot-up process could take minutes in my machine (I won&amp;rsquo;t say my machine is fast either, but it is sufficient), the app deployment takes too much time, moreover, the interaction is sluggish. Hence, it is a no go.
Up to now, I used my own android phone to test my app.</description>
    </item>
    
    <item>
      <title>Rendering Backbone (Sub)View</title>
      <link>http://nauvalatmaja.com/2014/12/29/rendering-backbone-subview/</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://nauvalatmaja.com/2014/12/29/rendering-backbone-subview/</guid>
      <description>When learning backbone.js (i&amp;rsquo;m a novice by the way), at first, I was actually having a hard time to grasp the backbone view. Especially how the best practice to render the view and build a rather complex view consists of several subviews. And then, magically I came accross Ian Storm Taylor&amp;rsquo;s post about his experience on dealing with backbone subview. At first I didn&amp;rsquo;t quiet understand well about the post until I found a thread on stackoverflow, which was started by Ian Storm Taylor.</description>
    </item>
    
  </channel>
</rss>